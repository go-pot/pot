// Code generated by "pkgimport -p pot -i gopkg.in/ffmt.v1 -o ffmt.go"; DO NOT EDIT.
// Install by "go get -u -v github.com/wzshiming/gotype/cmd/pkgimport";
//go:generate pkgimport -p pot -i gopkg.in/ffmt.v1 -o ffmt.go

package pot

import (
	origin "gopkg.in/ffmt.v1"
)

// Declaration
var (

	// ToTable Data to table data
	ToTable = origin.ToTable

	// TableText table text
	TableText = origin.TableText

	StylePuts = origin.StylePuts

	StylePrint = origin.StylePrint

	StylePjson = origin.StylePjson

	StyleP = origin.StyleP

	// Sputs The go style friendly to string
	Sputs = origin.Sputs

	// Sprint The go style friendly to string
	Sprint = origin.Sprint

	// Spjson The json style friendly display to string
	Spjson = origin.Spjson

	Space = origin.Space

	// Sp The go style friendly display types and data to string
	Sp = origin.Sp

	// SmarkStackFunc stack information
	SmarkStackFunc = origin.SmarkStackFunc

	// SmarkStack stack information
	SmarkStack = origin.SmarkStack

	// Smark returns Output prefix current line position
	Smark = origin.Smark

	// Sd for debug
	Sd = origin.Sd

	// Puts The go style friendly display
	Puts = origin.Puts

	// Println fmt.Println
	Println = origin.Println

	// Printf fmt.Printf
	Printf = origin.Printf

	// Print The go style friendly display
	Print = origin.Print

	// Pjson The json style friendly display
	Pjson = origin.Pjson

	// P The go style friendly display types and data
	P = origin.P

	// NewOptional ffmt optional
	NewOptional = origin.NewOptional

	// MarkStackFull Output stack full
	MarkStackFull = origin.MarkStackFull

	// MarkStack Output prefix stack line pos
	MarkStack = origin.MarkStack

	// Mark Output prefix current line position
	Mark = origin.Mark

	// Fputs The go style friendly to writer
	Fputs = origin.Fputs

	// Fprint The go style friendly to writer
	Fprint = origin.Fprint

	// Fpjson The json style friendly display to writer
	Fpjson = origin.Fpjson

	// Fp The go style friendly display types and data to writer
	Fp = origin.Fp

	// Format  Format("hello {name}", "ffmt") to "hello ffmt"
	Format = origin.Format

	// FmtTable Format table data
	FmtTable = origin.FmtTable

	// D for debug
	D = origin.D

	CanRowSpan = origin.CanRowSpan

	CanFilterDuplicate = origin.CanFilterDuplicate

	CanDefaultString = origin.CanDefaultString

	// Align returns align structured strings
	Align = origin.Align
)
