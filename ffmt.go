// Code generated by "pkgimport -p pot -i gopkg.in/ffmt.v1 -o ffmt.go"; DO NOT EDIT.
// Install by "go get -u -v gopkg.in/pkgimport.v1/cmd/pkgimport";
//go:generate pkgimport -p pot -i gopkg.in/ffmt.v1 -o ffmt.go

package pot

import (
	origin "gopkg.in/ffmt.v1"
)

var (
	// function

	/*
	 */
	NewOptional = origin.NewOptional

	/*The go stlye friendly display types and data to writer

	 */
	Fp = origin.Fp

	/*The go stlye friendly display types and data

	 */
	P = origin.P

	/*The go stlye friendly display types and data to string

	 */
	Sp = origin.Sp

	/*The go stlye friendly to writer

	 */
	Fputs = origin.Fputs

	/*The go stlye friendly display

	 */
	Puts = origin.Puts

	/*The go stlye friendly to string

	 */
	Sputs = origin.Sputs

	/*The go stlye friendly to writer

	 */
	Fprint = origin.Fprint

	/*The go stlye friendly display

	 */
	Print = origin.Print

	/*The go stlye friendly to string

	 */
	Sprint = origin.Sprint

	/*The json stlye friendly display to writer

	 */
	Fpjson = origin.Fpjson

	/*The json stlye friendly display

	 */
	Pjson = origin.Pjson

	/*The json stlye friendly display to string

	 */
	Spjson = origin.Spjson

	/*Data to table data

	 */
	ToTable = origin.ToTable

	/*Format table data

	 */
	FmtTable = origin.FmtTable

	/*Format

	 */
	Format = origin.Format

	/*Output stack full

	 */
	MarkStackFull = origin.MarkStackFull

	/*Output prefix stack line pos

	 */
	MarkStack = origin.MarkStack

	/*Output prefix current line position

	 */
	Mark = origin.Mark

	/*
	 */
	FMakeStack = origin.FMakeStack

	/*
	 */
	FMakeStackFunc = origin.FMakeStackFunc
)

var (
	// value

	/*
	can use .(fmt.Stringer)
	*/
	CanDefaultString = origin.CanDefaultString

	/*
	Filter duplicates
	*/
	CanFilterDuplicate = origin.CanFilterDuplicate

	/*
	Fold line
	*/
	CanRowSpan = origin.CanRowSpan

	/*
	Display type and data
	*/
	StlyeP = origin.StlyeP

	/*
	Display data
	*/
	StlyePuts = origin.StlyePuts

	/*
	Display data; string without quotes
	*/
	StlyePrint = origin.StlyePrint

	/*
	The json stlye display; Do not show private
	*/
	StlyePjson = origin.StlyePjson

	/*
	 */
	Space = origin.Space

	/*
	 */
	Printf = origin.Printf

	/*
	 */
	Println = origin.Println
)
